#!/usr/bin/env node
'use strict';

var chalk = require('chalk');
var argv = require('minimist')(process.argv.slice(2));
var command = argv._[0];

var PhonegapBoilerplate = require('../index.js');
var pb = new PhonegapBoilerplate(process.cwd());

switch (command) {
  case 'reconfigure':
    pb.reconfigure();
    break;
  case 'create':
    pb.create();
    break;
  case 'fetch':
    pb.fetch();
    break;
  case 'merge':
    pb.merge();
    break;
  case 'update':
    pb.update();
    break;
  case 'push':
    pb.push();
  case 'version':
    console.log(pb.getVersion());
    break;
  default:
    console.log(chalk.blue('Phonegap Boilerplate (v' + pb.getVersion() + '), usage:'));
    console.log(chalk.gray('* ' + chalk.white('pb create') +
        ': create a new Phonegap Boilerplate project (client or server)'));
    console.log(chalk.gray('* ' + chalk.white('pb fetch') + ': fetch the pb-core remote'));
    console.log(chalk.gray('* ' + chalk.white('pb update') + ' (on the `pb-core` ' +
        'branch): pulls the changes and pushes them on `origin`'));
    console.log(chalk.gray('* ' + chalk.white('pb merge') + ' (on the target branch): ' +
        'merges in the branch pb-core'));
    console.log(chalk.gray('* ' + chalk.white('pb push') + ' (on the `pb-core` branch): ' +
        'pushes the changes on `origin/pb-core` and `pb-core/dev`'));
    console.log(chalk.gray('* ' + chalk.white('pb reconfigure') + ': edit the pb configuration'));
    console.log(chalk.gray('* ' + chalk.white('pb version') + ': output the version number'));
    break;
}
